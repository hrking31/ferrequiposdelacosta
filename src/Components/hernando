/**
 * Resume/CV template created with Bootstrap 5 by @vmoratog and @jdnichollsc
 */
const resume = {
  firstName: "HERNANDO",
  lastName: "REY",
  jobTitle: "Full Stack Developer",
  city: "Barranquilla, Atlantico",
  postalCode: "054040",
  country: "Colombia",
  phone: "+573028446805",
  email: "hrking31@gmail.com",
  education: [
    {
      school: "Politécnico Costa Atlántica",
      graduationDate: "2015",
      description: "Electronic Engineer",

      school: "Full Stack Developer",
      graduationDate: "2023",
      description: "Ingeniería de software",
    },
  ],
  links: [
    {
      label: "GitHub",
      link: "https://github.com/hrking31",
    },
    {
      label: "LinkedIn",
      link: "https://www.linkedin.com/in/hernando-rey/",
    },
  ],
  skills: [
    "JavaScript",
    "CSS",
    "ReactJS",
    "Redux",
    "NodeJS",
    "ExpressJs",
    "PostgreSQL",
    "MySQL",
    "MongoDB",
    "Docker",
    "GIT",
  ],
  languages: ["Spanish"],
  professionalSummary: `I am a passionate self-taught developer looking for new challenges in the field of technology. With over 18 years of experience as an electronics engineer, I have gained a broad base of knowledge and technical skills. My main focus in the last 11 months has been to become a highly-skilled Full Stack developer. During this time, I have gained in-depth knowledge in all layers of a web application, from front-end development to database management and back-end implementation..`,
  employmentHistory: [
    {
      jobTitle: "Alarmas ITX",
      achievements: [
        "ITX Alarms represents a web platform where technologies such as Arduino, NodeMCU, React and Firebase real-time database converge. Through the integration of NodeMCU devices and the arduino IDE, I have designed smart sensors capable of monitoring power plant ignition, instantly and continuously transmitting operating status data to Firebase.",

        "This ecosystem is further expanded with the addition of four additional sensors that measure temperature and humidity in the various equipment rooms of the station. This essential data is integrated and processed in real time through Firebase to provide a rich and dynamic view of the operating environment.",

        "The visual presentation of this data is carried out using React and CSS. This enables uninterrupted and aesthetic monitoring of the status of the power plant and the ambient conditions of the rooms.",

        "As a continuous improvement, I am implementing notifications through Telegram. This update will provide relevant alerts and notifications in real time.",
      ],
    },

    {
      jobTitle: "Sunset Sands Hotel",
      achievements: [
        "I have had the opportunity to work on a collaborative project focused on the creation of a booking engine for hotels. Since technologies like React were used as the core of the application, the backend was worked with Node.js and Express, which allowed me to build a custom API that powered the functionality of the booking engine. For data management, I implemented MongoDB, ensuring efficient and accessible storage. In addition, Material UI was used to ensure an aesthetic design and an intuitive user experience throughout the project.",
      ],
    },

    {
      jobTitle: "Pokéworld",
      achievements: [
        "This project highlights my ability to work with modern technologies like React and external APIs, as well as my ability to create a complete web application that meets usability and user experience standards.",
      ],
    },
    {
      jobTitle: "King of Games",
      achievements: [
        "This application was based on the integration of the external RAWG API, which provides data about video games.",

        "I used React as the core of the app, developing reusable components and a dynamic user interface. Also, for the backend, I used Node.js and Express to build my own API that would interact with the RAWG API and handle the data efficiently.",
      ],
    },
    {
      jobTitle: "Hernando Rey",
      achievements: [
        "Currently, I am immersed in the development of my personal portfolio.",
      ],
    },
  ],
  photo:
    "https://scontent.fbog2-4.fna.fbcdn.net/v/t1.6435-9/167942986_4363729256987825_9029499495646085524_n.jpg?_nc_cat=111&ccb=1-5&_nc_sid=09cbfe&_nc_eui2=AeFlP0IL-UlmxdHfXATvSkLoVjqUFgp-kOlWOpQWCn6Q6dfIgifPku5hr2rVFCqVYT7o4CdWb-JkeRb3r2Dk0Ox5&_nc_ohc=fiszoyxORFQAX8bE_Z2&_nc_ht=scontent.fbog2-4.fna&oh=00_AT9fLZKsBJajLj8uslmdNJ_sA19VuYFpdhmfn0ruMg2-RQ&oe=624B9C0F",
};

const formatResume = (r) => ({
  ...r,
  address: [r.country, r.city, r.postalCode].filter(Boolean).join(", "),
});

new Vue({
  el: "#app",
  data: formatResume(resume),
});

/**
 * Wait for animatable-component to be loaded (Only for VanillaJS)
 **/
function animatableLoaded() {
  document.querySelector("body").classList.remove("d-none");
}
if (customElements) {
  customElements.whenDefined("animatable-component").then(animatableLoaded);
} else animatableLoaded();

// import { useSelector, useDispatch } from "react-redux";
// import {
//   setFormCotizacion,
//   setItems,
//   setTotal,
// } from "../../Store/Slices/cotizacionSlice";
// import html2canvas from "html2canvas";
// import jsPDF from "jspdf";

// const Cotizacion = () => {
//   const dispatch = useDispatch();
//   const formValues = useSelector((state) => state.cotizacion.value);
//   const items = useSelector((state) => state.cotizacion.value.items);
//   const total = useSelector((state) => state.cotizacion.value.total);

//   const generatePDF = async () => {
//     const input = document.getElementById("cotizacion-container");
//     const pdf = new jsPDF("p", "mm", "a4");

//     const canvas = await html2canvas(input);
//     const imgData = canvas.toDataURL("image/png");

//     pdf.addImage(imgData, "PNG", 10, 10, 190, 280);
//     pdf.save("cotizacion.pdf");
//   };

//   // const updateItem = (index, field, value) => {
//   //   const updatedItems = [...items];
//   //   updatedItems[index][field] = value;
//   //   setItems(updatedItems);
//   // };

//   const updateItem = (index, field, value) => {
//     const updatedItems = [...items]; // Copia del arreglo de items
//     const updatedItem = { ...updatedItems[index], [field]: value }; // Actualiza el campo específico del ítem
//     updatedItems[index] = updatedItem; // Reemplaza el ítem actualizado en la copia del arreglo
//     dispatch(setItems(updatedItems)); // Actualiza el estado con la copia modificada
//   };

//   const calculateTotal = () => {
//     const totalAmount = items.reduce(
//       (total, item) => total + item.quantity * item.price,
//       0
//     );
//     dispatch(setTotal(totalAmount));
//   };

//   const addNewItem = () => {
//     const newItem = { description: "", quantity: 0, price: 0 };
//     dispatch(setItems([...items, newItem]));
//   };

//   const handlerInputChange = (event) => {
//     const { name, value } = event.target;
//     const updatedFormValues = { ...formValues, [name]: value };
//     dispatch(setFormCotizacion(updatedFormValues));
//   };

//   return (
//     <div>
//       <div>
//         <label>Fecha:</label>
//         <input
//           type="date"
//           name="fecha"
//           onChange={handlerInputChange}
//           placeholder="  Fecha..."
//         />
//       </div>
//       <div>
//         <label>Empresa:</label>
//         <input
//           type="text"
//           name="empresa"
//           onChange={handlerInputChange}
//           placeholder="  Empresa..."
//         />
//       </div>
//       <div>
//         <label>Nit:</label>
//         <input
//           type="number"
//           name="nit"
//           onChange={handlerInputChange}
//           placeholder="  Nit..."
//         />
//       </div>
//       <div>
//         <label>Dirección:</label>
//         <input
//           type="text"
//           name="direccion"
//           onChange={handlerInputChange}
//           placeholder="  direccion..."
//         />
//       </div>

//       <div id="cotizacion-container">
//         <div style={{ textAlign: "center", color: "blue" }}>
//           <h1 style={{ fontSize: "24px" }}>FERREQUIPOS DE LA COSTA</h1>
//         </div>
//         <div style={{ textAlign: "center", color: "red" }}>
//           <h2>Alquiler de equipos para la construccion</h2>
//           <h2>Nit: 22.736.950 - 1 </h2>
//         </div>
//         <p>Barranquilla, {formValues.fecha}</p>
//         <p>Señores: {formValues.empresa}</p>
//         <p>Nit: {formValues.nit}</p>
//         <p>Obra: {formValues.direccion}</p>
//         <h2>Cotización</h2>

//         <button onClick={addNewItem}>Agregar Ítem</button>
//         {items.map((item, index) => (
//           <div key={index}>
//             <input
//               type="text"
//               placeholder="Descripción"
//               value={item.description}
//               onChange={(e) => updateItem(index, "description", e.target.value)}
//             />
//             <input
//               type="number"
//               placeholder="Cantidad"
//               value={item.quantity}
//               onChange={(e) =>
//                 updateItem(index, "quantity", parseInt(e.target.value))
//               }
//             />
//             <input
//               type="number"
//               placeholder="Precio"
//               value={item.price}
//               onChange={(e) =>
//                 updateItem(index, "price", parseFloat(e.target.value))
//               }
//             />
//           </div>
//         ))}
//       </div>

//       <button onClick={calculateTotal}>Calcular Total</button>
//       <p>Total: {total}</p>

//       <button onClick={generatePDF}>Generar PDF</button>
//     </div>
//   );
// };

// export default Cotizacion;




const formatPrice = (price) => {
  return price.toLocaleString('es-CO', { style: 'currency', currency: 'COP' });
  };